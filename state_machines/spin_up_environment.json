{
  "Comment": "Spin Up Environment\nParameters: \n{\n    \"solr\": {\n      \"baseUrl\": \"http://example.org:8983/solr/\",\n      \"collections\": [\"one-collection\", \"another-collection\"]\n    },\n    \"rds\": {\n      \"meadow\": \"meadow-db\",\n      \"stack\": \"stack-s-db\"\n    }\n}",
  "StartAt": "Parallel",
  "States": {
    "Parallel": {
      "Type": "Parallel",
      "End": true,
      "Branches": [{
          "StartAt": "Ensure Meadow DB Available",
          "States": {
            "Ensure Meadow DB Available": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "${ensure_db_instance_available_state_machine_arn}",
                "Input": {
                  "DbInstanceIdentifier.$": "$$.Execution.Input.rds.meadow",
                  "CalledFrom.$": "$$.Execution.Id"
                }
              },
              "Next": "Spin Up Meadow"
            },
            "Spin Up Meadow": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "${update_service_counts_state_machine_arn}",
                "Input": {
                  "Cluster": "meadow",
                  "Services": [{
                    "Name": "meadow",
                    "DesiredCount": 1
                  }],
                  "CalledFrom.$": "$$.Execution.Id"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Start Samvera Stack",
          "States": {
            "Start Samvera Stack": {
              "Type": "Parallel",
              "Branches": [{
                  "StartAt": "Ensure Stack DB Available",
                  "States": {
                    "Ensure Stack DB Available": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "${ensure_db_instance_available_state_machine_arn}",
                        "Input": {
                          "DbInstanceIdentifier.$": "$$.Execution.Input.rds.stack",
                          "CalledFrom.$": "$$.Execution.Id"
                        }
                      },
                      "Next": "Spin Up Fedora"
                    },
                    "Spin Up Fedora": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "${update_service_counts_state_machine_arn}",
                        "Input": {
                          "Cluster": "fcrepo",
                          "Services": [{
                            "Name": "fcrepo",
                            "DesiredCount": 1
                          }],
                          "CalledFrom.$": "$$.Execution.Id"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Spin Up SolrCloud",
                  "States": {
                    "Spin Up SolrCloud": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "${update_service_counts_state_machine_arn}",
                        "Input": {
                          "Cluster": "solrcloud",
                          "Services": [{
                              "Name": "solr",
                              "DesiredCount": 4
                            },
                            {
                              "Name": "zookeeper-0",
                              "DesiredCount": 1
                            },
                            {
                              "Name": "zookeeper-1",
                              "DesiredCount": 1
                            },
                            {
                              "Name": "zookeeper-2",
                              "DesiredCount": 1
                            }
                          ],
                          "CalledFrom.$": "$$.Execution.Id"
                        }
                      },
                      "Next": "Check Solr"
                    },
                    "Check Solr": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::lambda:invoke",
                      "Parameters": {
                        "FunctionName": "${solr_utils_lambda_arn}",
                        "Payload": {
                          "operation": "ready",
                          "solr": {
                            "baseUrl.$": "$$.Execution.Input.solr.baseUrl",
                            "nodeCount": 4
                          }
                        }
                      },
                      "Retry": [{
                        "ErrorEquals": [
                          "Lambda.ServiceException",
                          "Lambda.AWSLambdaException",
                          "Lambda.SdkClientException"
                        ],
                        "IntervalSeconds": 2,
                        "MaxAttempts": 6,
                        "BackoffRate": 2
                      }],
                      "Next": "Ready?",
                      "ResultSelector": {
                        "result.$": "$.Payload"
                      }
                    },
                    "Ready?": {
                      "Type": "Choice",
                      "Choices": [{
                        "Variable": "$.result",
                        "BooleanEquals": true,
                        "Next": "Restore Solr Collections"
                      }],
                      "Default": "Wait for Solr"
                    },
                    "Wait for Solr": {
                      "Type": "Wait",
                      "Seconds": 30,
                      "Next": "Check Solr"
                    },
                    "Restore Solr Collections": {
                      "Type": "Map",
                      "Iterator": {
                        "StartAt": "Restore Collection",
                        "States": {
                          "Restore Collection": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::lambda:invoke",
                            "OutputPath": "$.Payload",
                            "Parameters": {
                              "FunctionName": "${solr_utils_lambda_arn}",
                              "Payload": {
                                "operation": "restore",
                                "solr": {
                                  "baseUrl.$": "$$.Execution.Input.solr.baseUrl"
                                },
                                "collection.$": "$",
                                "failIfExists": false
                              }
                            },
                            "Retry": [{
                              "ErrorEquals": [
                                "Lambda.ServiceException",
                                "Lambda.AWSLambdaException",
                                "Lambda.SdkClientException"
                              ],
                              "IntervalSeconds": 2,
                              "MaxAttempts": 6,
                              "BackoffRate": 2
                            }],
                            "End": true
                          }
                        }
                      },
                      "End": true,
                      "ItemsPath": "$$.Execution.Input.solr.collections",
                      "MaxConcurrency": 3
                    }
                  }
                }
              ],
              "Next": "Start Samvera Apps"
            },
            "Start Samvera Apps": {
              "Type": "Parallel",
              "End": true,
              "Branches": [{
                  "StartAt": "Spin Up Arch",
                  "States": {
                    "Spin Up Arch": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "${update_service_counts_state_machine_arn}",
                        "Input": {
                          "Cluster": "arch",
                          "Services": [{
                              "Name": "arch-webapp",
                              "DesiredCount": 1
                            },
                            {
                              "Name": "arch-worker",
                              "DesiredCount": 1
                            }
                          ],
                          "CalledFrom.$": "$$.Execution.Id"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Spin Up AVR",
                  "States": {
                    "Spin Up AVR": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::states:startExecution.sync:2",
                      "Parameters": {
                        "StateMachineArn": "${update_service_counts_state_machine_arn}",
                        "Input": {

                          "Cluster": "avr",
                          "Services": [{
                              "Name": "avr-webapp",
                              "DesiredCount": 1
                            },
                            {
                              "Name": "avr-worker",
                              "DesiredCount": 1
                            }
                          ],
                          "CalledFrom.$": "$$.Execution.Id"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    }
  },
  "TimeoutSeconds": 3600
}